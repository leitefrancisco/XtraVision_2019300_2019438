/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package xtravision_2019300_2019438.views;

import java.awt.Image;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import xtravision_2019300_2019438.controllers.MovieController;
import xtravision_2019300_2019438.models.Movie;

/**
 *
 * @author Francisco Leite
 * @author Aline Rabelo
 */
public class ReturnDetailFrame extends javax.swing.JInternalFrame {

     private MainFrame mf;
     private int orderId;
     
    /**
     * Creates new form ReturnDetailFrame
     */
    

    public ReturnDetailFrame(MainFrame mf, int orderId) {
        this.mf = mf;
        this.orderId = orderId;
        initComponents();
        
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        tblMoviesFromOrder = new javax.swing.JTable();
        returnMovieLabel = new javax.swing.JLabel();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblMoviesFromOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblMoviesFromOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMoviesFromOrderMouseClicked(evt);
            }
        });
        scrollPane.setViewportView(tblMoviesFromOrder);

        returnMovieLabel.setText("Click on the movie to return it");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(returnMovieLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(returnMovieLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(btnBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //button to go back to return frame
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        mf.showReturnFrame();
    }//GEN-LAST:event_btnBackActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         MovieController mc = new MovieController();
         showOrderMovies(mc.getMoviesFromOrderId(orderId));
    }//GEN-LAST:event_formInternalFrameOpened

    private void tblMoviesFromOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMoviesFromOrderMouseClicked
       int row = tblMoviesFromOrder.getSelectedRow();
       Movie movie = (Movie) tblMoviesFromOrder.getValueAt(row, 0);
       MovieController mc = new MovieController();
       if(movie.getStatus() == 0 ){
       int n = JOptionPane.showConfirmDialog(this,"If you are returning this movie, insert the disk and click \"Yes\" ","=]",JOptionPane.YES_NO_OPTION);
        if( n == 0){
           try {
               mc.returnMovie(movie.getOrderLineId(),movie.getId());
               this.dispose();
               mf.showReturnDetailFrame(orderId);
               JOptionPane.showMessageDialog(this, "Movie returned! Thank you");
           } catch (SQLException ex) {
               Logger.getLogger(ReturnDetailFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
       }
    }//GEN-LAST:event_tblMoviesFromOrderMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel returnMovieLabel;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTable tblMoviesFromOrder;
    // End of variables declaration//GEN-END:variables
  
    
    
   public void showOrderMovies(Movie[] movies){
    //an array of the films that were selected to be shown on the cart was created
        MovieReturnTableModel model = new MovieReturnTableModel(movies);
        setTableModel(model);
    }
  

    private void setTableModel(MovieReturnTableModel model){
    //taking information from the Cart Table Model to configure the movies and movie posters that are on the card
        tblMoviesFromOrder.setModel(model);
        tblMoviesFromOrder.setRowHeight(120);
        tblMoviesFromOrder.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblMoviesFromOrder.getColumnModel().getColumn(0).setCellRenderer(new ImageRenderer());   
    }

}
